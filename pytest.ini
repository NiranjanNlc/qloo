[tool:pytest]
# Pytest configuration for Qloo Supermarket Layout Optimizer

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add project source to Python path
pythonpath = src

# Minimum required version
minversion = 7.0

# Default command line options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=5
    --durations=10
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --junitxml=pytest-results.xml

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (test component interactions)
    e2e: End-to-end tests (test complete workflows)
    performance: Performance and load tests
    smoke: Smoke tests for quick validation
    slow: Tests that take longer than 5 seconds
    staging: Tests for staging environment
    production: Tests for production environment
    api: API-related tests
    database: Database-related tests
    external: Tests that require external services
    mock: Tests using mocks and stubs

# Test filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::FutureWarning

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */build/*
    */dist/*
    */__pycache__/*
    */migrations/*
    */scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2

[coverage:html]
directory = htmlcov